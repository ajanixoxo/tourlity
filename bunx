// types/settings.ts
import { UserRole } from './enums';

export interface SettingsUser {
  id: string;
  email: string;
  firstName: string;
  lastName: string;
  phone?: string;
  avatar?: string;
  role: UserRole;
  hostProfile?: {
    bio?: string;
    location?: string;
    languages: string[];
    specialties: string[];
    rating: number;
    totalEarnings: number;
    certificationUrl?: string;
  };
  facilitatorProfile?: {
    bio?: string;
    location?: string;
    languages: string[];
    specialties: string[];
    certification?: string;
    rating: number;
    totalEarnings: number;
    certificationUrl?: string;
  };
  translatorProfile?: {
    bio?: string;
    location?: string;
    sourceLanguages: string[];
    targetLanguages: string[];
    certification?: string;
    rating: number;
    totalEarnings: number;
    certificationUrl?: string;
  };
}

// components/SettingsPage.tsx
import React, { useState } from 'react';
import { UserRole } from '../types/enums';
import PersonalInformationTab from './PersonalInformationTab';
import AccountSecurityTab from './AccountSecurityTab';
import NotificationPreferencesTab from './NotificationPreferencesTab';
import CookieSettingsTab from './CookieSettingsTab';
import DataPrivacyTab from './DataPrivacyTab';

interface SettingsPageProps {
  user: SettingsUser;
  onUpdateUser: (updatedUser: Partial<SettingsUser>) => void;
}

const SettingsPage: React.FC<SettingsPageProps> = ({ user, onUpdateUser }) => {
  const [activeTab, setActiveTab] = useState('personal');

  const tabs = [
    { id: 'personal', label: 'Personal information' },
    { id: 'security', label: 'Account security' },
    { id: 'notifications', label: 'Notification preferences' },
    { id: 'cookies', label: 'Cookies settings' },
    { id: 'privacy', label: 'Data and privacy' },
  ]

  const renderTabContent = () => {
    switch (activeTab) {
      case 'personal':
        return <PersonalInformationTab user={user} onUpdateUser={onUpdateUser} />;
      case 'security':
        return <AccountSecurityTab user={user} />;
      case 'notifications':
        return <NotificationPreferencesTab user={user} />;
      case 'cookies':
        return <CookieSettingsTab />;
      case 'privacy':
        return <DataPrivacyTab />;
      default:
        return <PersonalInformationTab user={user} onUpdateUser={onUpdateUser} />;
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-2xl font-semibold text-gray-900 mb-2">Settings</h1>
          <p className="text-gray-600">Manage your profile, notification preferences, and security.</p>
        </div>

        {/* Tab Navigation */}
        <div className="flex space-x-1 mb-8 bg-gray-100 p-1 rounded-lg">
          {tabs.map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id)}
              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${
                activeTab === tab.id
                  ? 'bg-red-500 text-white'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              {tab.label}
            </button>
          ))}
        </div>

        {/* Tab Content */}
        <div className="bg-white rounded-lg shadow-sm p-6">
          {renderTabContent()}
        </div>
      </div>
    </div>
  );
};

// components/PersonalInformationTab.tsx
import React, { useState } from 'react';
import { UserRole } from '../types/enums';

interface PersonalInformationTabProps {
  user: SettingsUser;
  onUpdateUser: (updatedUser: Partial<SettingsUser>) => void;
}

const PersonalInformationTab: React.FC<PersonalInformationTabProps> = ({ user, onUpdateUser }) => {
  const [formData, setFormData] = useState({
    firstName: user.firstName,
    lastName: user.lastName,
    phone: user.phone || '',
    email: user.email,
    location: user.hostProfile?.location || user.facilitatorProfile?.location || user.translatorProfile?.location || '',
    languages: user.hostProfile?.languages || user.facilitatorProfile?.languages || user.translatorProfile?.sourceLanguages || [],
    hourlyRate: '20', // This would come from user data
  });

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSave = () => {
    onUpdateUser({
      firstName: formData.firstName,
      lastName: formData.lastName,
      phone: formData.phone,
      email: formData.email,
    });
  };

  const isRoleSpecificUser = user.role === UserRole.FACILITATOR || user.role === UserRole.TRANSLATOR;

  return (
    <div>
      {/* Profile Picture and Basic Info */}
      <div className="flex items-center mb-8">
        <div className="relative">
          <img
            src={user.avatar || "/api/placeholder/100/100"}
            alt="Profile"
            className="w-20 h-20 rounded-full object-cover"
          />
          {isRoleSpecificUser && (
            <div className="absolute -bottom-1 -right-1 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center">
              <svg className="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.828-2.828z" />
              </svg>
            </div>
          )}
        </div>
      </div>

      {/* Basic Information Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">First Name</label>
          <div className="relative">
            <input
              type="text"
              name="firstName"
              value={formData.firstName}
              onChange={handleInputChange}
              className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
              placeholder="Stephanie"
            />
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clipRule="evenodd" />
              </svg>
            </div>
          </div>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">Last Name</label>
          <div className="relative">
            <input
              type="text"
              name="lastName"
              value={formData.lastName}
              onChange={handleInputChange}
              className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
              placeholder="Asoegwu"
            />
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clipRule="evenodd" />
              </svg>
            </div>
          </div>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
          <div className="relative">
            <input
              type="tel"
              name="phone"
              value={formData.phone}
              onChange={handleInputChange}
              className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
              placeholder="+1 555-555-5555"
            />
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z" />
              </svg>
            </div>
          </div>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">Email</label>
          <div className="relative">
            <input
              type="email"
              name="email"
              value={formData.email}
              onChange={handleInputChange}
              className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
              placeholder="crownzdesigns@gmail.com"
            />
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
                <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
              </svg>
            </div>
          </div>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">Country of Residence</label>
          <div className="relative">
            <select
              name="location"
              value={formData.location}
              onChange={handleInputChange}
              className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent appearance-none"
            >
              <option value="USA">USA</option>
              <option value="Canada">Canada</option>
              <option value="UK">UK</option>
              <option value="Nigeria">Nigeria</option>
            </select>
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clipRule="evenodd" />
              </svg>
            </div>
          </div>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            {user.role === UserRole.TRANSLATOR ? 'Preferred Languages' : 'Preferred Language'}
          </label>
          <div className="relative">
            <select
              name="languages"
              className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent appearance-none"
            >
              <option value="English">English</option>
              <option value="Spanish">Spanish</option>
              <option value="French">French</option>
              <option value="German">German</option>
            </select>
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M7 2a1 1 0 00-.707 1.707L7 4.414v3.758a1 1 0 01-.293.707l-4 4C.817 14.769 2.156 18 4.828 18h10.343c2.673 0 4.012-3.231 2.122-5.121l-4-4A1 1 0 0113 8.172V4.414l.707-.707A1 1 0 0013 2H7zm2 6.172V4h2v4.172a3 3 0 00.879 2.12l1.027 1.028a4 4 0 00-2.171.102l-.47.156a4 4 0 01-2.53 0l-.563-.187a1.993 1.993 0 00-.114-.035l1.063-1.063A3 3 0 009 8.172z" clipRule="evenodd" />
              </svg>
            </div>
          </div>
        </div>

        {(user.role === UserRole.HOST || user.role === UserRole.FACILITATOR) && (
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Hourly Rate</label>
            <div className="relative">
              <input
                type="number"
                name="hourlyRate"
                value={formData.hourlyRate}
                onChange={handleInputChange}
                className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                placeholder="20"
              />
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z" />
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clipRule="evenodd" />
                </svg>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* Role-specific sections */}
      {user.role === UserRole.FACILITATOR && (
        <FacilitationPreferences user={user} />
      )}

      {user.role === UserRole.TRANSLATOR && (
        <TranslatorPreferences user={user} />
      )}

      {/* Save Button */}
      <div className="flex justify-end">
        <button
          onClick={handleSave}
          className="px-6 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors"
        >
          Edit details
        </button>
      </div>
    </div>
  );
};

// FacilitationPreferences Component
const FacilitationPreferences: React.FC<{ user: SettingsUser }> = ({ user }) => (
  <div className="mb-8">
    <h3 className="text-lg font-medium text-gray-900 mb-6">Facilitation Preferences</h3>
    
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-2">Tour Categories</label>
        <div className="relative">
          <select className="w-full pl-4 pr-10 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent appearance-none">
            <option>Cultural, Food and wine, Adventure</option>
          </select>
          <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
            <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
              <path fillRule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clipRule="evenodd" />
            </svg>
          </div>
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium text-gray-700 mb-2">Regions</label>
        <div className="relative">
          <select className="w-full pl-4 pr-10 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent appearance-none">
            <option>West coast, Pacific Northwest</option>
          </select>
          <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
            <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
              <path fillRule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clipRule="evenodd" />
            </svg>
          </div>
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium text-gray-700 mb-2">Translator Coordination</label>
        <div className="flex space-x-4">
          <label className="flex items-center">
            <input type="radio" name="translatorCoord" value="auto" className="text-red-500" defaultChecked />
            <span className="ml-2 text-sm text-gray-700">Auto-match</span>
          </label>
          <label className="flex items-center">
            <input type="radio" name="translatorCoord" value="manual" className="text-red-500" />
            <span className="ml-2 text-sm text-gray-700">Manual select</span>
          </label>
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium text-gray-700 mb-2">Tour Capacity</label>
        <div className="relative">
          <input
            type="number"
            defaultValue="25"
            className="w-full pl-4 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
          />
        </div>
      </div>
    </div>

    {/* Payout Settings */}
    <div className="mb-6">
      <h4 className="text-md font-medium text-gray-900 mb-4">Payout Settings</h4>
      <div className="bg-gray-50 p-4 rounded-lg">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center">
            <div className="w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center mr-3">
              <svg className="w-5 h-5 text-orange-600" fill="currentColor" viewBox="0 0 20 20">
                <path d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" />
              </svg>
            </div>
            <div>
              <p className="font-medium text-gray-900">Direct Deposit</p>
              <p className="text-sm text-gray-500">Account ending in •••• 4789</p>
            </div>
          </div>
          <div className="flex items-center space-x-2">
            <span className="px-2 py-1 bg-green-100 text-green-800 text-xs rounded">Default</span>
            <button className="text-sm text-red-500">Edit</button>
            <button className="text-sm text-red-500">Remove</button>
          </div>
        </div>
        <button className="w-full bg-red-500 text-white py-2 px-4 rounded-lg hover:bg-red-600 transition-colors">
          Add Payment Method
        </button>
      </div>
      <div className="mt-4 p-4 bg-gray-50 rounded-lg">
        <p className="font-medium text-gray-900 mb-1">Payment Schedule</p>
        <p className="text-lg font-semibold text-gray-900">Weekly on Friday</p>
        <p className="text-sm text-gray-500">Payments are processed after report submission</p>
      </div>
    </div>

    {/* Availability Calendar */}
    <div>
      <h4 className="text-md font-medium text-gray-900 mb-4">Availability</h4>
      <div className="flex items-center justify-between mb-4">
        <button className="text-gray-400 hover:text-gray-600">
          <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path fillRule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clipRule="evenodd" />
          </svg>
        </button>
        <h5 className="text-lg font-medium">July 2025</h5>
        <button className="text-gray-400 hover:text-gray-600">
          <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path fillRule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clipRule="evenodd" />
          </svg>
        </button>
      </div>

      {/* Calendar Grid */}
      <div className="grid grid-cols-7 gap-1 text-center text-sm">
        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (
          <div key={day} className="p-2 font-medium text-gray-500">{day}</div>
        ))}
        {Array.from({ length: 31 }, (_, i) => i + 1).map(date => (
          <button
            key={date}
            className={`p-2 hover:bg-gray-100 rounded ${
              date === 1 || date === 15 ? 'bg-red-500 text-white' : 'text-gray-700'
            }`}
          >
            {date}
          </button>
        ))}
      </div>

      <div className="mt-4 p-3 border-l-4 border-red-500 bg-red-50">
        <p className="font-medium text-red-900">Pause Available</p>
        <p className="text-sm text-red-700">Temporarily stop receiving new assignments</p>
      </div>
    </div>
  </div>
);



// TranslatorPreferences Component  
const TranslatorPreferences: React.FC<{ user: SettingsUser }> = ({ user }) => (
  <div className="mb-8">
    <h3 className="text-lg font-medium text-gray-900 mb-6">Language Pairs</h3>
    
    <div className="space-y-4 mb-6">
      <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
        <div>
          <div className="flex items-center space-x-2 mb-1">
            <span className="font-medium">English → Spanish</span>
          </div>
          <div className="flex items-center">
            <span className="text-sm text-gray-500 mr-2">Proficiency:</span>
            <div className="flex space-x-1">
              {[1,2,3,4].map(star => (
                <svg key={star} className="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                </svg>
              ))}
            </div>
            <span className="ml-2 px-2 py-1 bg-green-100 text-green-800 text-xs rounded">Certified</span>
          </div>
        </div>
        <button className="text-red-500 hover:text-red-700">
          <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path fillRule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clipRule="evenodd" />
          </svg>
        </button>
      </div>

      <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
        <div>
          <div className="flex items-center space-x-2 mb-1">
            <span className="font-medium">French → English</span>
          </div>
          <div className="flex items-center">
            <span className="text-sm text-gray-500 mr-2">Proficiency:</span>
            <div className="flex space-x-1">
              {[1,2,3,4].map(star => (
                <svg key={star} className="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                </svg>
              ))}
            </div>
            <button className="ml-2 text-red-500 text-sm">Upload Certificate</button>
          </div>
        </div>
        <button className="text-red-500 hover:text-red-700">
          <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path fillRule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clipRule="evenodd" />
          </svg>
        </button>
      </div>
    </div>

    <button className="text-red-500 hover:text-red-700 text-sm font-medium">
      + Add Language Pair
    </button>
  </div>
);

// AccountSecurityTab Component
const AccountSecurityTab: React.FC<{ user: SettingsUser }> = ({ user }) => {
  return (
    <div>
      {/* Change Password Section */}
      <div className="mb-8">
        <h3 className="text-lg font-medium text-gray-900 mb-6">Change Password</h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">Current Password</label>
            <div className="relative">
              <input
                type="password"
                className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                placeholder="Enter your current password"
              />
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clipRule="evenodd" />
                </svg>
              </div>
            </div>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">New Password</label>
            <div className="relative">
              <input
                type="password"
                className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                placeholder="Enter your password"
              />
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg className="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clipRule="evenodd" />
                </svg>
              </div>
            </div>
          </div>
        </div>

        <div className="flex justify-end">
          <button className="px-6 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors">
            Change password
          </button>
        </div>
      </div>

      {/* Two-Factor Authentication */}
      <div>
        <h3 className="text-lg font-medium text-gray-900 mb-6">Two-factor authentication (2FA)</h3>
        
        <div className="space-y-6">
          <div className="border border-gray-200 rounded-lg p-6">
            <h4 className="font-medium text-gray-900 mb-2">Text Message (SMS)</h4>
            <p className="text-sm text-gray-600 mb-4">Receive a one-time passcode via SMS each time you log in.</p>
            <label className="flex items-center">
              <input type="checkbox" className="rounded border-gray-300 text-red-500 focus:ring-red-500" />
              <span className="ml-2 text-sm text-gray-700">Enable SMS 2FA</span>
            </label>
          </div>

          <div className="border border-gray-200 rounded-lg p-6">
            <h4 className="font-medium text-gray-900 mb-2">Authenticator App (TOTP)</h4>
            <p className="text-sm text-gray-600 mb-4">Use an app to receive a temporary one-time passcode each time you log in.</p>
            <label className="flex items-center">
              <input type="checkbox" className="rounded border-gray-300 text-red-500 focus:ring-red-500" />
              <span className="ml-2 text-sm text-gray-700">Enable Authenticator App</span>
            </label>
          </div>
        </div>
      </div>
    </div>
  );
};

// NotificationPreferencesTab Component
const NotificationPreferencesTab: React.FC<{ user: SettingsUser }> = ({ user }) => {
  const notifications = [
    {
      title: "Booking Confirmations",
      description: "Receive notifications when your booking is confirmed",
      enabled: true
    },
    {
      title: "Host Updates", 
      description: "Get updates from your tour hosts",
      enabled: true
    },
    {
      title: "Tour Reminders",
      description: "Reminders about upcoming tours and activities", 
      enabled: false
    },
    {
      title: "New Offers",
      description: "Special deals and promotions",
      enabled: true
    },
    {
      title: "Payment Confirmations",
      description: "Notifications about payments and refunds",
      enabled: true
    }
  ];

  return (
    <div>
      <div className="space-y-6">
        {notifications.map((notification, index) => (
          <div key={index} className="flex items-center justify-between py-4 border-b border-gray-100 last:border-b-0">
            <div>
              <h4 className="font-medium text-gray-900 mb-1">{notification.title}</h4>
              <p className="text-sm text-gray-600">{notification.description}</p>
            </div>
            <label className="flex items-center">
              <input 
                type="checkbox" 
                defaultChecked={notification.enabled}
                className="rounded border-gray-300 text-red-500 focus:ring-red-500" 
              />
            </label>
          </div>
        ))}
      </div>
    </div>
  );
};

// CookieSettingsTab Component
const CookieSettingsTab: React.FC = () => {
  const cookieTypes = [
    {
      title: "Essential Cookies",
      description: "Required for the website to function properly",
      enabled: true,
      required: true
    },
    {
      title: "Performance Cookies", 
      description: "Help us improve website performance and user experience",
      enabled: true,
      required: false
    },
    {
      title: "Functional Cookies",
      description: "Enable personalized features and functionality",
      enabled: false,
      required: false
    }
  ];

  return (
    <div>
      <div className="space-y-6">
        {cookieTypes.map((cookie, index) => (
          <div key={index} className="flex items-center justify-between py-4 border-b border-gray-100 last:border-b-0">
            <div>
              <h4 className="font-medium text-gray-900 mb-1">{cookie.title}</h4>
              <p className="text-sm text-gray-600">{cookie.description}</p>
            </div>
            <div className="flex items-center">
              {cookie.required ? (
                <span className="text-sm text-gray-500">Required</span>
              ) : (
                <label className="relative inline-flex items-center cursor-pointer">
                  <input 
                    type="checkbox" 
                    defaultChecked={cookie.enabled}
                    className="sr-only peer" 
                  />
                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-red-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-red-500"></div>
                </label>
              )}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

// DataPrivacyTab Component
const DataPrivacyTab: React.FC = () => {
  return (
    <div className="space-y-8">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        {/* Download Data */}
        <div className="border border-gray-200 rounded-lg p-6">
          <div className="flex items-start">
            <div className="flex-shrink-0">
              <svg className="w-6 h-6 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clipRule="evenodd" />
              </svg>
            </div>
            <div className="ml-4">
              <h3 className="text-lg font-medium text-gray-900 mb-2">Download My Data</h3>
              <p className="text-sm text-gray-600 mb-4">
                Get a copy of all the data we have stored about you, including your profile, bookings, and preferences.
              </p>
              <button className="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
                Request Data Download
              </button>
            </div>
          </div>
        </div>

        {/* Delete Account */}
        <div className="border border-red-200 rounded-lg p-6">
          <div className="flex items-start">
            <div className="flex-shrink-0">
              <svg className="w-6 h-6 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z" clipRule="evenodd" />
                <path fillRule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clipRule="evenodd" />
              </svg>
            </div>
            <div className="ml-4">
              <h3 className="text-lg font-medium text-gray-900 mb-2">Request Account Deletion</h3>
              <p className="text-sm text-gray-600 mb-4">
                Request to permanently delete your account and all associated data. This action cannot be undone.
              </p>
              <button className="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors">
                Request Account Deletion
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SettingsPage;